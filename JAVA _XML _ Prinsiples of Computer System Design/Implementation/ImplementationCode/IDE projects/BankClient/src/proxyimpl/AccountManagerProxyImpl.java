
package proxyimpl;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "AccountManagerProxyImpl", targetNamespace = "http://ProxyImpl/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AccountManagerProxyImpl {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws InexistentAccountException_Exception
     * @throws PartitionIsDownException_Exception
     * @throws InexistentBranchException_Exception
     * @throws NegativeAmountException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "transfer", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.Transfer")
    @ResponseWrapper(localName = "transferResponse", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.TransferResponse")
    public void transfer(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        double arg3)
        throws InexistentAccountException_Exception, InexistentBranchException_Exception, NegativeAmountException_Exception, PartitionIsDownException_Exception
    ;

    /**
     * 
     */
    @WebMethod(operationName = "PrintBranchAndAccounts")
    @RequestWrapper(localName = "PrintBranchAndAccounts", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.PrintBranchAndAccounts")
    @ResponseWrapper(localName = "PrintBranchAndAccountsResponse", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.PrintBranchAndAccountsResponse")
    public void printBranchAndAccounts();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws InexistentAccountException_Exception
     * @throws PartitionIsDownException_Exception
     * @throws InexistentBranchException_Exception
     * @throws NegativeAmountException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "credit", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.Credit")
    @ResponseWrapper(localName = "creditResponse", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.CreditResponse")
    public void credit(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2)
        throws InexistentAccountException_Exception, InexistentBranchException_Exception, NegativeAmountException_Exception, PartitionIsDownException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws InexistentAccountException_Exception
     * @throws PartitionIsDownException_Exception
     * @throws InexistentBranchException_Exception
     * @throws NegativeAmountException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "debit", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.Debit")
    @ResponseWrapper(localName = "debitResponse", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.DebitResponse")
    public void debit(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2)
        throws InexistentAccountException_Exception, InexistentBranchException_Exception, NegativeAmountException_Exception, PartitionIsDownException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns double
     * @throws PartitionIsDownException_Exception
     * @throws InexistentBranchException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateExposure", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.CalculateExposure")
    @ResponseWrapper(localName = "calculateExposureResponse", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.CalculateExposureResponse")
    public double calculateExposure(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws InexistentBranchException_Exception, PartitionIsDownException_Exception
    ;

    /**
     * 
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNoLogs", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.GetNoLogs")
    @ResponseWrapper(localName = "getNoLogsResponse", targetNamespace = "http://ProxyImpl/", className = "proxyimpl.GetNoLogsResponse")
    public long getNoLogs();

}
